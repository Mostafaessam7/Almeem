@model Pagination<Order>
@{
    ViewBag.Title = "Get Order";
}



<div class="container-fluid px-4">


    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
       @*          <div>
                    <i class="fas fa-table me-1"></i>
                    Orders List
                </div> *@
                <h2 class="text-center h2">Orders</h2>

                <div>
                    <select id="statusFilter" class="form-select form-select-sm">
                        <option value="">All Status</option>
                        <option value="Pending">Pending</option>
                        <option value="PaymentReceived">PaymentReceived</option>
                        <option value="Refunded">Refunded</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="card-body">
            <table id="ordersTable" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Order ID</th>
                        <th>Customer Email</th>
                        <th>Order Date</th>
                        <th>Total</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                @if (Model != null && Model.Data.Any())
                {
                    @foreach (var order in Model.Data)
                    {
                        <tr>
                            <td>@order.Id</td>
                            <td>@order.BuyerEmail</td>
                            <td>@order.OrderDate.ToShortDateString()</td>
                            <td>@order.Total.ToString("C")</td>
                            <td>
                                <span class="badge @(order.Status switch {
                                    "Pending" => "bg-warning",
                                    "PaymentReceived" => "bg-success",
                                    "Refunded" => "bg-danger",
                                    _ => "bg-secondary"
                                })">@order.Status</span>
                            </td>
                            <td>
                                   <a href="@Url.Action("Getorder", new { id = order.Id })"
                                   class="btn btn-primary btn-sm">
                                    <i class="fas fa-eye"></i> Details
                                </a>
                                @if (order.Status == "Completed")
                                {
                                    <button class="btn btn-danger btn-sm refund-btn"
                                            data-order-id="@order.Id">
                                        <i class="fas fa-undo"></i> Refund
                                    </button>
                                }
                            </td>
                        </tr>
                    }
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var table = $('#ordersTable').DataTable({
                order: [[0, 'desc']]
            });

            $('#statusFilter').on('change', function() {
                var status = $(this).val();
                table.column(4).search(status).draw();
            });

            $('.refund-btn').on('click', async function() {
                if (confirm('Are you sure you want to refund this order?')) {
                    const orderId = $(this).data('order-id');
                    try {
                        const response = await fetch(`/Admin/orders/refund/${orderId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        if (response.ok) {
                            alert('Order refunded successfully');
                            location.reload();
                        } else {
                            const error = await response.text();
                            alert(`Failed to refund order: ${error}`);
                        }
                    } catch (error) {
                        alert('Error processing refund');
                    }
                }
            });
        });
    </script>
}